openapi: 3.0.3
info:
  title: ModishCarts Products API
  description: Product catalog management for e-commerce platform
  version: 1.0.0
  contact:
    name: ModishCarts Development Team

servers:
  - url: http://localhost:8000/api
    description: Development server
  - url: https://api.modishcarts.com
    description: Production server

paths:
  /products:
    get:
      summary: List products with filtering and pagination
      tags:
        - Products
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: category
          in: query
          schema:
            type: string
          description: Filter by category slug
        - name: search
          in: query
          schema:
            type: string
          description: Search products by name or description
        - name: minPrice
          in: query
          schema:
            type: number
            minimum: 0
        - name: maxPrice
          in: query
          schema:
            type: number
            minimum: 0
        - name: inStock
          in: query
          schema:
            type: boolean
          description: Filter by inventory availability
        - name: featured
          in: query
          schema:
            type: boolean
          description: Show only featured products
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [name, price, created, rating]
            default: created
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  filters:
                    $ref: '#/components/schemas/ProductFilters'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create a new product (Admin only)
      tags:
        - Products
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /products/{id}:
    get:
      summary: Get product by ID
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ProductDetails'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update product (Admin only)
      tags:
        - Products
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete product (Admin only)
      tags:
        - Products
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /products/{id}/reviews:
    get:
      summary: Get product reviews
      tags:
        - Products
        - Reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  summary:
                    $ref: '#/components/schemas/ReviewSummary'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique product identifier
        name:
          type: string
          description: Product name
        slug:
          type: string
          description: URL-friendly product identifier
        description:
          type: string
          description: Full product description
        shortDesc:
          type: string
          description: Brief product description
        sku:
          type: string
          description: Stock keeping unit
        price:
          type: number
          format: decimal
          description: Product price
        comparePrice:
          type: number
          format: decimal
          description: Compare at price (for discounts)
        inventoryQty:
          type: integer
          description: Available quantity
        isActive:
          type: boolean
          description: Product availability status
        isFeatured:
          type: boolean
          description: Featured product flag
        category:
          $ref: '#/components/schemas/Category'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        averageRating:
          type: number
          format: float
          description: Average customer rating
        reviewCount:
          type: integer
          description: Number of reviews
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductDetails:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            variants:
              type: array
              items:
                $ref: '#/components/schemas/ProductVariant'
            relatedProducts:
              type: array
              items:
                $ref: '#/components/schemas/Product'

    ProductVariant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sku:
          type: string
        price:
          type: number
          format: decimal
        inventoryQty:
          type: integer
        attributes:
          type: object
          additionalProperties: true
        isActive:
          type: boolean

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string

    ProductImage:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
          format: uri
        altText:
          type: string
        sortOrder:
          type: integer

    Review:
      type: object
      properties:
        id:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        title:
          type: string
        comment:
          type: string
        isVerified:
          type: boolean
        user:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
        createdAt:
          type: string
          format: date-time

    ReviewSummary:
      type: object
      properties:
        averageRating:
          type: number
          format: float
        totalReviews:
          type: integer
        ratingDistribution:
          type: object
          properties:
            5:
              type: integer
            4:
              type: integer
            3:
              type: integer
            2:
              type: integer
            1:
              type: integer

    CreateProductRequest:
      type: object
      required:
        - name
        - sku
        - price
        - categoryId
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        shortDesc:
          type: string
          maxLength: 500
        sku:
          type: string
          pattern: '^[A-Z0-9-]+$'
        price:
          type: number
          format: decimal
          minimum: 0
        comparePrice:
          type: number
          format: decimal
          minimum: 0
        inventoryQty:
          type: integer
          minimum: 0
        categoryId:
          type: string
        isFeatured:
          type: boolean
        tags:
          type: array
          items:
            type: string

    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        shortDesc:
          type: string
          maxLength: 500
        price:
          type: number
          format: decimal
          minimum: 0
        comparePrice:
          type: number
          format: decimal
          minimum: 0
        inventoryQty:
          type: integer
          minimum: 0
        categoryId:
          type: string
        isActive:
          type: boolean
        isFeatured:
          type: boolean
        tags:
          type: array
          items:
            type: string

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        hasNext:
          type: boolean
        hasPrev:
          type: boolean

    ProductFilters:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        priceRange:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        brands:
          type: array
          items:
            type: string

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'